---
// src/pages/index.astro
import MainLayout from '../layouts/MainLayout.astro';
import ThemeSwitcher from '../components/ThemeSwitcher';
import { SiJavascript, SiReact, SiNodedotjs, SiAstro, SiTailwindcss, SiPython } from "react-icons/si";
import { Portfolio } from '../components/Portfolio';
import { Contact } from '../components/Contact';
import { Fire } from '../components/Fire';

// Forzar modo oscuro por defecto
// (Puedes ajustar la lógica en tu ThemeSwitcher para alternar entre remover/añadir la clase "dark" al <html>)
const document = typeof window !== 'undefined' ? window.document : null;
document?.documentElement?.classList.add('dark');
---

<MainLayout title="Yamid Dev | Desarrollador Full Stack">
  <div class="min-h-screen 
              bg-white text-gray-800
              dark:bg-gradient-to-b dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 
              dark:text-white 
              overflow-x-hidden 
              transition-colors duration-300">

    <!-- Tema -->
    <div class="fixed top-4 right-4 z-50">
      <ThemeSwitcher client:visible />
    </div>

    <!-- Hero Section -->
    <main class="container mx-auto px-4 py-16">
      <!-- Encabezado -->
      <div class="text-center mb-16 translate-y-4 animate-[fadeIn_1s_ease-out_forwards]">
        <h1 class="text-5xl md:text-6xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-emerald-500">
          Yamid Rodriguez
        </h1>
        <p class="text-[1.2rem] md:text-xl text-gray-600 dark:text-gray-300">
          Desarrollador Full Stack &amp; Creador de Contenido
        </p>
      </div>

      <!-- Botones de acción -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-16">
        {[
          { id: 'projects', icon: Portfolio, text: 'Proyectos', primary: true },
          { id: 'contact', icon: Contact, text: 'Contacto' },
          { id: 'content', icon: Fire, text: 'Contenido' }
        ].map((button) => (
          <button
            id={`btn-${button.id}`}
            class:list={[
              'group relative overflow-hidden rounded-xl transition-all duration-300 hover:scale-[1.02] active:scale-[0.98]',
              button.primary
                ? 'bg-gradient-to-r from-blue-500 to-emerald-500 text-white'
                : 'border border-gray-300 dark:border-gray-700 hover:border-gray-400 dark:hover:border-gray-600 text-gray-800 dark:text-gray-200'
            ]}
          >
            <div class="px-6 py-4 flex items-center justify-center gap-3 font-semibold">
              <button.icon />
              {button.text}
            </div>
          </button>
        ))}
      </div>

      <!-- Sección "Sobre mí" -->
      <div class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-2xl p-8 mb-16 shadow-sm transition-colors">
        <div class="flex flex-col md:flex-row gap-8 items-center">
          <div class="relative w-48 h-48">
            <div class="absolute inset-0 rounded-full bg-gradient-to-r from-blue-500 to-emerald-500 animate-[spin_8s_linear_infinite]"></div>
            <img
              src="./dev.jpg"
              alt="Profile"
              class="absolute inset-[3px] rounded-full object-cover bg-gray-100 dark:bg-gray-900"
            />
          </div>
          <div class="flex-1 text-center md:text-left">
            <h2 class="text-2xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-emerald-500">
              Sobre mí
            </h2>
            <p class="text-gray-600 dark:text-gray-300 mb-6 text-2sm md:text-xl">
              Mi nombre es Yamid Horacio Rodríguez, soy de Colombian, y cuento con más de 2 años de experiencia desarrollando aplicaciones web y móviles. 
            </p>
            <p class="mb-6 font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-emerald-500 text-2sm md:text-xl">
              Me especializo en crear experiencias digitales modernas y responsivas.

            </p>
            <button
              id="btn-aboutMe"
              class="px-6 py-2 rounded-full bg-gradient-to-r from-blue-500 to-emerald-500 text-white font-semibold transition-transform hover:scale-105 active:scale-95"
            >
              Saber más
            </button>
          </div>
        </div>
      </div>

      <!-- Tecnologías -->
      <div class="flex flex-wrap gap-4 justify-center">
        {[
          { Icon: SiJavascript, name: "JavaScript", color: "text-yellow-500" },
          { Icon: SiReact, name: "React", color: "text-blue-500" },
          { Icon: SiNodedotjs, name: "Node.js", color: "text-green-600" },
          { Icon: SiPython, name: "Python", color: "text-blue-600" },
          { Icon: SiAstro, name: "Astro", color: "text-purple-500" },
          { Icon: SiTailwindcss, name: "Tailwind", color: "text-cyan-500" }
        ].map((tech) => (
          <div class="group relative">
            <div class="flex items-center gap-2 px-4 py-2 rounded-full 
                        bg-white dark:bg-gray-800 
                        border border-gray-200 dark:border-gray-700 
                        hover:border-gray-300 dark:hover:border-gray-600 
                        transition-all duration-300">
              <tech.Icon className={`w-5 h-5 ${tech.color}`} />
              <span class="text-sm text-gray-600 dark:text-gray-300 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                {tech.name}
              </span>
            </div>
          </div>
        ))}
      </div>
    </main>

    <!-- Secciones deslizantes -->
    {['projects', 'content', 'contact', 'about-me'].map((section) => (
      <div
        id={section}
        class="fixed top-0 left-full w-full h-full 
               bg-white dark:bg-gray-900/90 
               backdrop-blur-md 
               transition-transform duration-500 
               p-8 overflow-y-auto z-50"
      >
        <button
          id={`cerrar-${section}`}
          class="absolute top-6 right-6 w-10 h-10 flex items-center justify-center rounded-full 
                 bg-gray-200 dark:bg-gray-800 
                 hover:bg-gray-300 dark:hover:bg-gray-700 
                 text-gray-600 dark:text-gray-300 
                 hover:text-gray-900 dark:hover:text-white 
                 transition-colors"
        >
          <span class="sr-only">Cerrar</span>
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
        <h2 class="text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-emerald-500 mb-8 text-center" style={{ marginTop: 'calc(50vh - 2rem)' }}>
          {section.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}
        </h2>
        <!-- Contenido de la sección -->
      </div>
    ))}
  </div>

  <!-- Script para abrir/cerrar secciones deslizantes -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const sections = ['projects', 'content', 'contact', 'about-me'];
      
      sections.forEach(section => {
        const button = document.getElementById(`btn-${section}`);
        const sectionEl = document.getElementById(section);
        const closeButton = document.getElementById(`cerrar-${section}`);
        
        if (button && sectionEl && closeButton) {
          button.addEventListener('click', () => {
            sectionEl.style.transform = 'translateX(-100%)';
          });
          
          closeButton.addEventListener('click', () => {
            sectionEl.style.transform = 'translateX(0)';
          });
        }
      });
    });
  </script>
</MainLayout>

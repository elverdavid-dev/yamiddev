---
import MainLayout from '../layouts/MainLayout.astro';
import ThemeSwitcher from '../components/ThemeSwitcher';
import { Portfolio } from '../components/icons/Portfolio';
import { Contact } from '../components/icons/Contact';
import { Fire } from '../components/icons/Fire';
import { AboutMe } from '../components/icons/AboutMe';
import { Computer } from '../components/icons/Computer'
import SectionAboutMe from '../components/AboutMe';
import ProjectsAreas from '../components/ProjectsAreas'
import Technology from '../components/Technology'
import '../styles/global.css'

// Forzar modo oscuro por defecto
const document = typeof window !== 'undefined' ? window.document : null;
document?.documentElement?.classList.add('dark');

// -----------------------
// Componente React: ProjectsAreas
// -----------------------


---
<MainLayout title="Yamid Dev | Desarrollador Full Stack">
  <div class="w-full flex flex-col items-center justify-center 
  bg-white text-gray-800
  dark:bg-gradient-to-b dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 
  dark:text-white 
  overflow-x-hidden overflow-y-hidden 
  transition-colors duration-300">

    <!-- Hero Section -->
    <main id="home" class="container h-[100vh] w-full flex justify-center items-center flex-col">
      <!-- Video de fondo -->
      <video autoplay loop muted playsinline class="absolute top-0 left-0 w-full h-full object-cover">
        <source src="media/code-2.mp4" type="video/mp4" />
        Tu navegador no soporta videos.
      </video>
      <!-- Overlay negro semitransparente -->
      <div class="absolute inset-0 bg-black bg-opacity-85"></div>
      <!-- Encabezado -->
      <div class="text-center my-16 translate-y-4 animate-[fadeIn_1s_ease-out_forwards] max-w-[65ch] rounded-lg">
        <h1 class="text-4xl md:text-6xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-emerald-500 p-4">
        Yamid Rodriguez
        </h1>
        <p class="text-[1.2rem] md:text-xl text-gray-300">
          Desarrollador JavaScript &amp; Creador de Contenido
        </p>
      </div>

      <!-- Botones de acción -->
      <div class="grid grid-cols-1 md:grid-cols-1 gap-2 w-auto px-4 place-items-center mb-16">
        {[
          { id: 'projects', icon: Portfolio, text: 'Proyectos', primary: true},

        ].map((button) => (
          <button
            id={`btn-${button.id}`}
            class:list={[
              'group relative woverflow-hidden rounded-xl transition-all duration-300 hover:scale-[1.02] active:scale-[0.98]',
              button.primary
                ? 'bg-gradient-to-r from-blue-500 to-emerald-500 text-white'
                : 'border border-gray-300 dark:border-gray-700 hover:border-gray-400 dark:hover:border-gray-600 text-gray-800 dark:text-gray-200'
            ]}
          >
            <div class="px-6 py-4 flex items-center justify-center gap-3 font-semibold">
              <button.icon />
              {button.text}
            </div>
          </button>
        ))}
      </div>
    </main>
    <SectionAboutMe/>
    <div id="technology" class="w-full h-[100vh] flex items-center justify-center md:m-0">
      <Technology />
    </div>

    <!-- Secciones deslizantes -->
    {['projects'].map((section) => (
      <div
        id={section}
        class="fixed top-0 left-full w-full h-full 
               bg-white dark:bg-gray-900/90 
               backdrop-blur-md 
               transition-transform duration-500 
               p-5 overflow-y-auto z-50 custom-scrollbar"
      >
        <button
          id={`cerrar-${section}`}
          class="absolute top-6 right-6 w-10 h-10 flex items-center justify-center rounded-full 
                 bg-gray-200 dark:bg-gray-800 
                 hover:bg-gray-300 dark:hover:bg-gray-700 
                 text-gray-600 dark:text-gray-300 
                 hover:text-gray-900 dark:hover:text-white 
                 transition-colors"
        >
          <span class="sr-only">Cerrar</span>
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
        {section === 'projects' ? (
          // Sección "Proyectos" con Areas integradas
          <h1 class="text-[2rem] font-bold text-cyan-400 text-center">Projects</h1>
          <ProjectsAreas client:load />
        ) :  null}
      </div>
    ))}
  </div>

  <!-- Script para abrir/cerrar secciones deslizantes -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const sections = ['projects'];
      
      sections.forEach(section => {
        const button = document.getElementById(`btn-${section}`);
        const sectionEl = document.getElementById(section);
        const closeButton = document.getElementById(`cerrar-${section}`);
        
        if (button && sectionEl && closeButton) {
          button.addEventListener('click', () => {
            sectionEl.style.transform = 'translateX(-100%)';
          });
          
          closeButton.addEventListener('click', () => {
            sectionEl.style.transform = 'translateX(0)';
          });
        }
      });
    });
  </script>
</MainLayout>
